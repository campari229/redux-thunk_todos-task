{"version":3,"sources":["store.js","api.js","components/TodoList/TodoList.js","components/TodoInfo/TodoInfo.js","components/UserInfo/UserInfo..js","components/User/User.js","App.js","index.js"],"names":["setUserId","id","type","getTodos","state","todos","loadingStatus","isLoading","errorStatus","loadingError","getSelectedUser","selectedUser","getUserId","selectedUserId","loadingUserStatus","userIsLoading","userErrorStatus","userError","initialState","undefined","store","createStore","arguments","length","action","Object","objectSpread2","user","applyMiddleware","thunk","API_URL","loadData","dataToLoad","userId","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","t0","fetch","concat","then","response","json","result","catch","abrupt","stop","_x","apply","this","TodoList","useDispatch","useSelector","react_default","createElement","className","map","todo","htmlFor","defaultChecked","completed","title","onClick","TodoInfo","error","UserInfo","User","name","email","phone","App","TodoInfo_TodoInfo","UserInfo_UserInfo","TodoList_TodoList","User_User","Root","es","src_App","ReactDOM","render","src_Root","document","getElementById"],"mappings":"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","file":"static/js/main.10e52b33.chunk.js","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nconst SET_TODOS = 'SET_TODOS';\nconst LOADING_TOGGLER = 'LOADING_TOGGLER';\nconst CLEAR_TODOS = 'CLEAR_TODOS';\nconst SET_TODOS_ERROR = 'SET_TODOS_ERROR';\n\nconst LOAD_USER = 'LOAD_USER';\nconst SET_USER_ID = 'SET_USER_ID';\nconst LOADING_USER_TOGGLER = 'LOADING_USER_TOGGLER';\nconst SET_USER_ERROR = 'SET_USER_ERROR';\nconst CLEAR_USER = 'CLEAR_USER';\n\nexport const setTodos = todos => ({\n  type: SET_TODOS,\n  todos,\n});\nexport const toggleIsLoading = () => ({ type: LOADING_TOGGLER });\nexport const clearTodods = () => ({ type: CLEAR_TODOS });\nexport const setError = () => ({ type: SET_TODOS_ERROR });\n\nexport const loadUser = user => ({\n  type: LOAD_USER,\n  user,\n});\nexport const toggleUserIsLoadin = () => ({ type: LOADING_USER_TOGGLER });\nexport const setUserError = () => ({ type: SET_USER_ERROR });\nexport const setUserId = id => ({\n  type: SET_USER_ID,\n  id,\n});\nexport const clearUser = () => ({ type: CLEAR_USER });\n\nexport const getTodos = state => state.todos;\nexport const loadingStatus = state => state.isLoading;\nexport const errorStatus = state => state.loadingError;\n\nexport const getSelectedUser = state => state.selectedUser;\nexport const getUserId = state => state.selectedUserId;\nexport const loadingUserStatus = state => state.userIsLoading;\nexport const userErrorStatus = state => state.userError;\n\nconst initialState = {\n  todos: [],\n  isLoading: false,\n  loadingError: false,\n  selectedUser: undefined,\n  selectedUserId: null,\n  userIsLoading: false,\n  userError: false,\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_TODOS':\n      return {\n        ...state,\n        todos: action.todos,\n      };\n\n    case 'LOADING_TOGGLER':\n      return {\n        ...state,\n        isLoading: !state.isLoading,\n        loadingError: false,\n      };\n\n    case 'CLEAR_TODOS':\n      return {\n        ...state,\n        todos: [],\n      };\n\n    case 'SET_TODOS_ERROR':\n      return {\n        ...state,\n        loadingError: true,\n      };\n\n    case 'LOAD_USER':\n      return {\n        ...state,\n        selectedUser: action.user,\n      };\n\n    case 'SET_USER_ID':\n      return {\n        ...state,\n        id: action.id,\n      };\n\n    case 'LOADING_USER_TOGGLER':\n      return {\n        ...state,\n        userIsLoading: !state.userIsLoading,\n        userError: false,\n      };\n\n    case 'SET_USER_ERROR':\n      return {\n        ...state,\n        userError: true,\n      };\n\n    case 'CLEAR_USER':\n      return {\n        ...state,\n        selectedUser: undefined,\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(thunk)\n);\n\nexport default store;\n","import {\n  toggleIsLoading,\n  setTodos,\n  setError,\n  loadUser,\n  setUserError,\n  toggleUserIsLoadin,\n  setUserId,\n} from './store';\n\nconst API_URL = 'https://jsonplaceholder.typicode.com';\n\nexport const loadData = (dataToLoad, userId) => async(dispatch) => {\n  switch (dataToLoad) {\n    case 'todos':\n      dispatch(toggleIsLoading());\n      fetch(`${API_URL}/todos`)\n        .then(response => response.json())\n        .then((result) => {\n          dispatch(setTodos(result));\n          dispatch(toggleIsLoading());\n        })\n        .catch(() => {\n          dispatch(toggleIsLoading());\n          dispatch(setError());\n        });\n      break;\n    case 'user':\n      dispatch(setUserId);\n      dispatch(toggleUserIsLoadin());\n      fetch(`${API_URL}/users/${userId}`)\n        .then(response => response.json())\n        .then((result) => {\n          dispatch(loadUser(result));\n          dispatch(toggleUserIsLoadin());\n        })\n        .catch(() => {\n          dispatch(toggleUserIsLoadin());\n          dispatch(setUserError());\n        });\n      break;\n    default:\n      break;\n  }\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { loadingStatus, getTodos } from '../../store';\nimport { loadData } from '../../api';\n\nexport const TodoList = () => {\n  const dispatch = useDispatch();\n  const todos = useSelector(getTodos);\n  const isLoading = useSelector(loadingStatus);\n\n  if (!isLoading) {\n    if (todos.length) {\n      return (\n        <div className=\"content\">\n          <div className=\"TodoList\">\n            <ul className=\"TodoList__list\">\n              {todos.map(todo => (\n                <li className=\"TodoList__item\">\n                  <label htmlFor={todo.id}>\n                    <input\n                      type=\"checkbox\"\n                      id={todo.id}\n                      defaultChecked={todo.completed}\n                    />\n                    {todo.title}\n                  </label>\n                  <button\n                    type=\"button\"\n                    onClick={() => dispatch(loadData('user', todo.userId))}\n                  >\n                    {`User ${todo.userId}`}\n                  </button>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      );\n    }\n\n    if (!todos.length) {\n      return (\n        <div className=\"content\">\n          <p>-</p>\n        </div>\n      );\n    }\n  }\n\n  return (\n    <div className=\"content\">\n      <div className=\"loader\" />\n    </div>\n  );\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { loadingStatus, getTodos, clearTodods, errorStatus } from '../../store';\n\nimport { loadData } from '../../api';\n\nexport const TodoInfo = () => {\n  const dispatch = useDispatch();\n  const todos = useSelector(getTodos);\n  const isLoading = useSelector(loadingStatus);\n  const error = useSelector(errorStatus);\n\n  if (!todos.length) {\n    if (isLoading) {\n      return <p className=\"info\">Loading...</p>;\n    }\n\n    if (!isLoading && error) {\n      return (\n        <p className=\"info\">\n          Failed loading todos\n          <button\n            onClick={() => dispatch(loadData('todos'))}\n            type=\"button\"\n          >\n          Reload\n          </button>\n        </p>\n      );\n    }\n\n    if (!isLoading) {\n      return (\n        <p className=\"info\">\n          Todos are not loaded yet\n          <button\n            onClick={() => dispatch(loadData('todos'))}\n            type=\"button\"\n          >\n            {isLoading ? '...loading' : 'load data'}\n          </button>\n        </p>\n      );\n    }\n  }\n\n  return (\n    <p className=\"info\">\n      {`${todos.length} todos are loaded`}\n      <button\n        type=\"button\"\n        onClick={() => dispatch(clearTodods())}\n      >\n        Clear\n      </button>\n    </p>\n  );\n};\n","import React from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  getSelectedUser,\n  loadingUserStatus,\n  userErrorStatus,\n  getUserId,\n  clearUser,\n} from '../../store';\nimport { loadData } from '../../api';\n\nexport const UserInfo = () => {\n  const dispatch = useDispatch();\n  const user = useSelector(getSelectedUser);\n  const error = useSelector(userErrorStatus);\n  const isLoading = useSelector(loadingUserStatus);\n  const userId = useSelector(getUserId);\n\n  if (!user) {\n    if (isLoading) {\n      return <p className=\"info\">Loading...</p>;\n    }\n\n    if (!isLoading && error) {\n      return (\n        <p className=\"info\">\n          Failed loading user\n          <button\n            onClick={() => dispatch(loadData('user', userId))}\n            type=\"button\"\n          >\n          Reload\n          </button>\n        </p>\n      );\n    }\n\n    if (!isLoading) {\n      return <p className=\"info\">User is not selected</p>;\n    }\n  }\n\n  if (user && !user.id) {\n    return <p className=\"info\">{`User #${userId} does not exist`}</p>;\n  }\n\n  return (\n    <p className=\"info\">\n      {`User #${user.id} is loaded`}\n      <button\n        type=\"button\"\n        onClick={() => dispatch(clearUser())}\n      >\n        Clear\n      </button>\n    </p>\n  );\n};\n","import React from 'react';\n\nimport { useSelector } from 'react-redux';\n\nimport {\n  getSelectedUser,\n  loadingUserStatus,\n} from '../../store';\n\nexport const User = () => {\n  const user = useSelector(getSelectedUser);\n  const isLoading = useSelector(loadingUserStatus);\n\n  if (!isLoading) {\n    if (user && user.id) {\n      return (\n        <div className=\"content content--user\">\n          <div className=\"CurrentUser\">\n            <strong>Selected user:</strong>\n            <ul>\n              <li>{`#${user.id}`}</li>\n              <li>{user.name}</li>\n              <li>{user.email}</li>\n              <li>{user.phone}</li>\n            </ul>\n          </div>\n        </div>\n      );\n    }\n\n    if (!user || !user.id) {\n      return (\n        <div className=\"content content--no-user\">\n          <p>-</p>\n        </div>\n      );\n    }\n  }\n\n  return (\n    <div className=\"content content--user\">\n      <div className=\"loader\" />\n    </div>\n  );\n};\n","import React from 'react';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { TodoInfo } from './components/TodoInfo/TodoInfo';\nimport { UserInfo } from './components/UserInfo/UserInfo.';\nimport { User } from './components/User/User';\n\nconst App = () => (\n  <main className=\"App\">\n    <section>\n      <TodoInfo />\n      <UserInfo />\n    </section>\n    <section>\n      <TodoList />\n      <User />\n    </section>\n  </main>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './styles.css';\n\nimport App from './App';\nimport store from './store';\n\nconst Root = () => (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}